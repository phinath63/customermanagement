/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.19.v20160908
 * Generated at: 2017-02-08 03:09:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<title>Login</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/vendor.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/app.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"gray-bg\">\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"middle-box text-center loginscreen animated fadeInDown\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!--                    <h1 class=\"logo-name\">IPR</h1>-->\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<h3>Welcome to Customer Management Information System</h3>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\tManage your Customer here!!!\r\n");
      out.write("\t\t\t\t<!--Continually expanded and constantly improved Inspinia Admin Them (IN+)-->\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<p id=\"error\" style=\"display:none; color:red;\">Incorrect username or password!!!</p>\r\n");
      out.write("\t\t\t<form id=\"login\" method=\"POST\" class=\"m-t\" role=\"form\" action=\"login\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"username\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Username\" required>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"password\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Password\" required>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<button onclick=\"login()\" type=\"submit\" class=\"btn btn-primary block full-width m-b\">Login</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!--                <a href=\"#\"><small>Forgot password?</small></a>\r\n");
      out.write("                <p class=\"text-muted text-center\"><small>Do not have an account?</small></p>\r\n");
      out.write("                <a class=\"btn btn-sm btn-white btn-block\" href=\"register.html\">Create an account</a>-->\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<p class=\"m-t\">\r\n");
      out.write("\t\t\t\t<small>Customer Management System &copy; 2017</small>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Mainly scripts -->\r\n");
      out.write("\t<script src=\"js/app.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t<script src=\"js/plugins/jquery-form.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tvar login = function() {\r\n");
      out.write("\t\t\t$(\"#login\").ajaxForm({\r\n");
      out.write("\t\t\t\tsuccess : function() {\r\n");
      out.write("\t\t\t\t\twindow.location = \"customerList\";\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(){\r\n");
      out.write("\t\t\t\t\talert(\"Your username or password might be incorrect\");\r\n");
      out.write("\t\t\t\t\t$(\"#error\").css({\r\n");
      out.write("\t\t\t\t\t\tdisplay:\"block\"\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
